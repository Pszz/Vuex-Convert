import Vue from"vue";const Convert=function(t){function e(t,e,s){let i=n(t),c="set"+i,a=e.storage;"object"===o(e)?s.state[t]=void 0===e.value?{}:e.value:s.state[t]=e,s.getters["get"+i]=function(o){let n=o[t];if("local"===a||"session"===a){let e=window[`${a}Storage`].getItem(t);null!==e&&(n=JSON.parse(e||null),Vue.set(o,t,n))}return"function"==typeof e.getters?e.getters(o,t):n},!1!==e.actions&&(s.actions[c]=function({commit:t},o){"function"==typeof e.actions?e.actions.apply(this,[c,...arguments]):t(c,o)}),!1!==e.mutation&&(s.mutations[c]=function(e,o){Vue.set(e,t,o),"local"!==a&&"session"!==a||window[`${a}Storage`].setItem(t,JSON.stringify(o))})}function o(t){return Object.prototype.toString.call(t).replace(/\[object |\]/g,"").toLocaleLowerCase()}function n(t){return t.replace(/( |^)[a-z]/g,function(t){return t.toUpperCase()})}if(!(this instanceof Convert))return new Convert(t);this.state={},this.getters={},this.mutations={},this.actions={},this.modules={};let s=t.public||{},i=t.modules||{};Object.keys(s).forEach(function(t){e(t,s[t],this)}),Object.keys(i).forEach(function(t){let o=this.modules[t]={namespaced:!0,state:{},getters:{},actions:{},mutations:{}};Object.keys(i[t]).forEach(function(n){e(n,i[t][n],o)})})};export default Convert;